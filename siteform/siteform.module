<?php
/**
* @file
* Add a field to an existing site information form.
*/
use \Drupal\Core\Form\FormStateInterface;

/**
* Implements hook_form_alter(). to add new field in site information form
*/
function siteform_form_alter(&$form, FormStateInterface $form_state, $form_id) {
 // dpm($form_id);
  $siteinfo = \Drupal::config('system.site');
  $siteapi = $siteinfo->get('siteapikey');
  if($form_id=='system_site_information_settings'){
	  $form['siteapikey'] = array(
		'#type' => 'textfield',
		'#title' => t("Site API Key"),
		'#default_value' => (isset($siteapi) ? $siteapi:'No API Key yet'),
		//'#required' => TRUE,
		
	  );
	  
	  //update save confuguration text
    $form['actions']['submit']['#value'] = t('Update Configuration');
	// callback function on for submit
	 $form['actions']['submit']['#submit'][] = 'mymodule_form_submit';
   //kint($form);
  }
  
}

function mymodule_form_submit(array $form, FormStateInterface $form_state){
        //$siteinfo = \Drupal::config('system.site'); read only
		$config = \Drupal::service('config.factory')->getEditable('system.site');
		$config->set('siteapikey', $form_state->getValue('siteapikey'));
		$config->save();
		//echo $form['siteapikey']['#value']	
    drupal_set_message("API Key has been saved with value : ".$form['siteapikey']['#value']);

}

/**
 * Implements hook_uninstall().
 */
function siteform_uninstall() {
  // Clearing all the Site API Key values on module uninstall.
  \Drupal::configFactory()->getEditable('system.site')->clear('siteapikey')->save();
}
